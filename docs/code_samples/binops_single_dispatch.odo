------
module std'ops


trait #add =
    alias Self.RightHand = Self
    alias Self.Output = Self
    func (Self) + (other: Self.RightHand) -> Self.Output


trait #mul =
    alias Self.RightHand = Self
    alias Self.Output = Self
    func (Self) * (other: Self.RightHand) -> Self.Output


------
module vec

use std'ops for #add, #mul


struct Vec2 =
    x: Float
    y: Float
with
    #add, #mul


func (Vec2) + (other: Vector) -> Vec2 =
    Vec2(self.x + other.x, self.y + other.y)


alias Vec2#mul.RightHand = Float


func (Self) * (other: Float) -> Vec2 =
    Vec2(self.x * other, self.y * other)
