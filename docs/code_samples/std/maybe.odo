module Maybe

using

	Functor
	Monad


Maybe A =
	type
		None
		Some A
	end


map(self: Maybe A, function: A -> B) -> Maybe B =
	case self
	of None then None
	of Some item then Some (function(item))
	end


unit(self: A) -> Maybe A =
	Some


bind(self: Maybe A, function: A -> Maybe B) -> Maybe B =
	case self
	of None then None
	of Some item then function(item)
	end

