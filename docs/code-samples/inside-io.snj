<<
# Inside IO

From the [haskel wiki](https://wiki.haskell.org/IO_inside)
>>


-- First Attempt


let get-char() -> Char =
    ...

let get-2-chars() -> String =
    "{get-char()} {get-char()}"

let get-2-chars' -> String =
    let c = get-char()
    "{c} {c}"

let get-confirmation() -> Bool =
    get-char() == Char("y")


-- Second Attempt


let get-char(fake-param: Int) -> Char =
    ...

let get-2-chars() -> String =
    "{get-char(0)} {get-char(1)}"

let get-confirmation() -> Bool =
    get-char(0) == Char("y")


-- Third Attempt




-- With Monadic Bind


let get-char() -> Io[Char] =
    ...

let get-2-chars() -> Io[String] =
    get-char().and-then(a =>
        get-char().and-then(b =>
            Io("{a} {b}")
		)
	)


let get-4-chars() -> Io[String] =
    get-2-chars().and-then(a =>
        get-2-chars().and-then(b =>
            Io("{a} {b}")
		)
	)


let get-confirmation() -> Io[Bool] =
    get-char().and-then(a =>
        Io(a == "y")
	)



-- With Do Notation


let get-char() -> Io[Char] =
    ...


let get-2-chars() -> Io[String] =
    let? a = get-char()
    let? b = get-char()
    Io("{a} {b}")


let get-4-chars() -> Io[String] =
    let? a = get-2-chars()
    let? b = get-2-chars()
    Io("{a} {b}")


let get-confirmation() -> Io[Bool] =
    let? a = get-char()
    Io(a == Char "y")
