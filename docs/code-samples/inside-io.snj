/*
# Inside IO

From the [haskel wiki](https://wiki.haskell.org/IO_inside)
*/


/**/
module first-attempt

fun get-char() -> Char =
    ...

fun get-2-chars() -> String =
    "{get-char()} {get-char()}"

fun get-2-chars' -> String =
    c = get-char()
    "{c} {c}"

fun get-confirmation() -> Bool =
    get-char() == Char "y"


/**/
module second-attempt

fun get-char(fake-param: Int) -> Char =
    ...

fun get-2-chars() -> String =
    "{get-char(0)} {get-char(1)}"

fun get-confirmation() -> Bool =
    get-char(0) == Char "y"


/**/
module third-attempt




/**/
module with-monadic-bind

fun get-char() -> Io[Char] =
    ...

fun get-2-chars() -> Io[String] =
    get-char().and-then(a =>
        get-char().and-then(b =>
            Io("{a} {b}")
		)
	)


fun get-4-chars() -> Io[String] =
    get-2-chars().and-then(a =>
        get-2-chars().and-then(b =>
            Io("{a} {b}")
		)
	)


fun get-confirmation() -> Io[Bool] =
    get-char().and-then(a =>
        Io(a == "y")
	)



/**/
module with-do-notation

fun get-char() -> Io[Char] =
    ...


fun get-2-chars() -> Io[String] =
    a ?= get-char()
    b ?= get-char()
    Io("{a} {b}")


fun get-4-chars() -> Io[String] =
    a ?= get-2-chars()
    b ?= get-2-chars()
    Io("{a} {b}")


fun get-confirmation() -> Io[Bool] =
    a ?= get-char()
    Io(a == Char "y")
