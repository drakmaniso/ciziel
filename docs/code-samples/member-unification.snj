let Pet = Cat | Dog


let Cat {
    let name: String
    let favorite-toy: Cat-Toy
}


let Dog {
    let name: String
    let favorite-toy: Dog-Toy
}


derive Pet {
    def name: String
    def favorite-toy: Cat-Toy | Dog-Toy
}


let Cat-Toy = Wool-Ball | Laser | Wand
let Wool-Ball
let Laser
let Wand


let Dog-Toy = Chew-Bone | Stick | Squeaky-Ball
let Chew-Bone
let Stick
let Squeaky-Ball


extend Cat {
    let play(toy: Cat-Toy) -> Io[] {
        Io.print("{self.name} plays with {toy}")
    }

    let greets(human: String) -> Io[] {
        Io.print("{self.name} ignores {human}")
    }
}


extend Dog {
    let play(toy: Dog-Toy) -> Io[] {
        Io.print("{self.name} plays with {toy}")
    }

    let greets(human: String) -> Io[] {
        Io.print("{self.name} plays with {human}")
    }
}


derive Pet {
    def play(toy: Cat-Toy | Dog-Toy) -> Io[]
    def greets(human: String) -> Io[]
}
