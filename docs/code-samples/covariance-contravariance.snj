-- [from the blog article]: https://quuxplusone.github.io/blog/2019/01/20/covariance-and-contravariance/

local #animal =
    has (Self).make-noise() -> String
    impl Cat, Horse

local Cat = struct()
local (Cat).make-noise() -> String = "meow!"

local Horse = struct()
local (Horse).make-noise() -> String = "neigh!"
local (Horse).ride() -> String = "Ok, sure."


-- Breeders


local #animal-breeder =
    has Self.Animal
    has (Self).produce() -> Self.Animal

local Cat-Breeder = struct()
local Cat-Breeder.Animal = alias Cat
local (Cat-Breeder).produce() -> Cat = Cat

local Horse-Breeder = struct()
local Horse-Breeder.Animal = Horse
local (Horse-Breeder).produce() -> Horse = Horse


-- Doctors


local #animal-doctor =
    has (Self).treat(patient: #animal) -> ()
    implement Dr-Dolittle, Dr-Keat, Dr-Hackenbush

local #cat-doctor =
    has (Self).treat(patient: Cat) -> ()
    implement Dr-Dolittle, Dr-Keat

local #horse-doctor =
    has (Self).treat(patient: Horse) -> ()
    implement Dr-Dolittle, Dr-Hackenbush

local Dr-Dolittle = struct()
local (Dr-Dolittle).treat(patient: #animal) -> () = ()

local Dr-Keat = struct()
local (Dr-Keat).treat(patient: Cat) -> () = ()

local Dr-Hackenbush = struct()
local (Dr-Hackenbush).treat(patient: Horse) -> () = ()
