module std'ops


trait #add =
    Self'RightHand
    Self'Output
    (Self) + (other: Self.RightHand) -> Self.Output


trait #mul =
    Self'RightHand
    Self'Output
    (Self) * (other: Self.RightHand) -> Self.Output


-------------------------------------------------------------------------------


module vec


use std'ops for #add, #mul


struct Vec2 =
    x: Float
    y: Float
    implement #add, #sub, #mul


alias Vec2#add'RightHand = Vec2


alias Vec2#add'Output = Vec2


func (Vec2) `+` (other: Vector) -> Vec2 =
    Vec2(self.x + other.x, self.y + other.y)


alias Vec2#mul'RightHand = Float


alias Vec2#mul'Output = Vec2


func (Vec2) * (other: Float) -> Vec2 =
    Vec2(self.x * other, self.y * other)
