def foo(a: Int, b: Float) -> String =
	"{a} and {b}"


def (a: Int).bar(b: Float) -> String =
	"{a} and {b}"


def example-partial-application() -> Nil &io =
	let print-type(a) = print(a.Type)

	do print-type( foo(___, 0.5) )
	-- Int -> String

	do print-type( foo(123, ___) )
	-- Float -> String

	do print-type( foo(___, ___) )
	-- (Int, Float) -> String

	do print-type( ___.bar(0.5) )
	-- Int -> String

	do print-type( 123.bar(___) )
	-- Float -> String

	do print-type( ___.bar(___) )
	-- (Int, Float) -> String

	Nil


def main() =
	let _ex1 = 123.pipe(=> foo("abc", ___))
	let _ex2 = 123.pipe(x => foo("abc", x))
	Nil
