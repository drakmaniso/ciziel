-------------------------------------------------------------------------------


/* Maybe `match ... of` expressions can desugars to `if` with `is` expressions.*/


type Foo-Bar-Baz =
	| Foo(v: Int)
	| Bar(v: Int)
	| Baz(v: String)
	;


fun example-1(value: Foo) =
	match value
		| Foo(33) -> "First Case"
		| Foo(x) and (x <= 0) -> "Second Case: {x}"
		| Foo(x) -> "Third Case: {x}"
		;


fun example-1-desugared(value: Foo) =
	if value is Foo(33) then
		"First Case"
	else
		if (value is Foo(x)) and (x <= 0) then
			"Second Case: {x}"
		else
			if value is Foo(x) then
				"Third Case: {x}"
			else
				std.unreachable()


fun example-2(value: Foo-Bar-Baz) =
	match value
		| Foo(x)
		| Bar(x) -> "First Case {x}"

		| Foo(33)
		| Baz("33") -> "Second Case"
		;


fun example-2-desugared(value: Foo-Bar-Baz) =
	if (value is Foo(x)) or (value is Bar(x)) then
		"First Case {x}"
	else
		if (value is Foo(33)) or (value is Baz("33")) then
			"Second Case"
		else
			std.unreachable()
