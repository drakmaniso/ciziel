trait #any =
    func Self.type-info: TypeInfo

trait #to-string =
    func (Self).to-string -> String

trait #from-string =
    func Self.from-string(s: String) -> Self

------

def #parse =
    has parse(String) -> Self

def #show =
    has show(self) -> String

trait #format =
    func Self.format-size(format: Format) -> Size
    func (Self).format(format: Format, buffer: String) -> String

---
trait #iter =
    alias Self.Iterator #next
    func (Self).iter -> Self.Iterator

def #next =
    has Item
    has next!(self) -> Self.Item | Nil


---
def #map =
    has Self[T]
    has map(self, transform: T -> U) -> Self[U]

def #fold =
    has Self[T]
    has fold(self, initial: A, operation: (A, T) -> A) -> A

def #unfold =
    has Self[T]
    has unfold(initial: A, operation: A -> Option[(T, A)]) -> Self[T]
